Notes from gnome Notes

- Highlights: 1-800-962-3661
- Some stuff I as apparently reading
    - <iframe src="https://fivethirtyeight.abcnews.go.com/video/embed/77474882" width="640" height="360" scrolling="no" style="border:none;" allowfullscreen></iframe>
https://abcn.ws/3xX1oZq
https://gt.rstudio.com/
https://stevetobak.com/2018/03/11/myth-visionary-leader/
https://medium.com/swlh/the-myth-of-visionary-leadership-75ae26eca59d
https://bradleyboehmke.github.io/HOML/logistic-regression.html
https://www.r-bloggers.com/2015/08/evaluating-logistic-regression-models/
https://r4ds.had.co.nz/model-basics.html
https://www.fharrell.com/post/class-damage/
https://www.fharrell.com/post/classification/
https://stats.stackexchange.com/questions/290886/how-to-improve-rare-event-binary-classification-performance

# Cool SHINY things.
https://github.com/dreamRs/shinyWidgets#material-switch
https://rstudio.com/about/customer-stories/
https://github.com/dreamRs/shinyWidgets
https://adminlte.io/
https://github.com/RinteRface/argonR
https://github.com/RinteRface/argonDash
https://cran.r-project.org/web/packages/tablerDash/index.html
https://cran.r-project.org/web/packages/shinyEffects/index.html
https://cran.r-project.org/web/packages/echarts4r/index.html
https://github.com/sol-eng

# Error handling!
https://purrr.tidyverse.org/reference/safely.html
https://www.onceupondata.com/2018/09/28/handling-r-errors/


# ACPHS Stuff

https://rstudio.com/products/shinyapps/
https://rstudio.cloud/plans/instructor
https://rstudio.cloud/plans/free
https://rstudio.cloud/projects using my normal acphs password
https://rstudio.com/resources/webinars/rstudio-cloud-in-the-classroom/
https://education.rstudio.com/blog/2020/03/resources-for-teaching-data-science-and-statistics-remotely/
https://education.rstudio.com/teach/how-to-teach/
https://education.rstudio.com/teach/tools/
https://www.r-bloggers.com/2020/10/riinu-pius-r-for-health-data-science-from-clinicians-who-code-to-shiny-interventions/

https://rviews.rstudio.com/2018/05/16/replacing-excel-reports-with-r-markdown-and-shiny/
Why coding is important
Excel workbooks are hard to maintain, collaborate on, and debug because they are not reproducible. The content of every cell and the design of every chart is set without ever recording the authorâ€™s actions. There is no simple way to recreate an Excel workbook because there is no recipe (i.e., set of instructions) that describes how it was made. Because Excel workbooks lack a recipe, they tend to be hard to maintain and prone to errors. It takes care, vigilance, and subject-matter knowledge to maintain a complex Excel workbook. Even then, human errors abound and changes require a lot of effort.

A better approach is to write code. There are many reasons to start programming. When you create a recipe with code, anyone can reproduce your work (including your future self). The act of coding implicitly invites others to collaborate with you. You can systematically validate and debug your code. All of these things lead to better code over time. Coding in R has particular advantages given its vast ecosystem of packages, its vibrant community, and its powerful tool chain.


https://rviews.rstudio.com/2017/09/20/dashboards-with-r-and-databases/
https://db.rstudio.com/best-practices/dashboards/
Has the JS to create a new tab in a report for a drill-down.